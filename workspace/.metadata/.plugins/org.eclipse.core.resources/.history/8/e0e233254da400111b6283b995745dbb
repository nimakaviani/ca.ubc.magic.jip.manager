package actions;

import java.beans.PropertyChangeEvent;
import java.util.ArrayList;
import java.util.List;

import jipplugin.IView;

import com.jchapman.jipsnapman.models.ISnapshotInfoModel;

public class 
ControllerDelegate 
implements IController
{
	// this should eventually be turned into a "view" that can
		// be in the list of views to be updated
		private List<ISnapshotInfoModel>	registeredModels;
		private List<IView> 				registeredViews;
		
		
	public 
	ControllerDelegate()
	{
		registeredModels
			= new ArrayList<ISnapshotInfoModel>();
		registeredViews
			= new ArrayList<IView>();
	}
	
	@Override
	public void 
	propertyChange
	( PropertyChangeEvent evt ) 
	{
		System.out.println("ConfigureAction propertyChange");
		for(IView view : registeredViews){
			//jipplugin.Model snapshot = Activator.getDefault().getModel();
			// the main view should be updated in response to this
			// for now cheat
			view.modelPropertyChange(evt);
			/*jipView.setSnapshotDetails(
				snapshot.getSnapshotPath(), 
				snapshot.getSnapshotName(), 
				snapshot.getSnapshotPort(),
				snapshot.getSnapshotHost()
			);*/
		}
	}
	
	public void 
	addModel
	(ISnapshotInfoModel model) 
	{
		registeredModels.add(model);
		model.addPropertyChangeListener(this);
	}

	public void 
	removeModel
	(ISnapshotInfoModel model) 
	{
		registeredModels.remove(model);
		model.removePropertyChangeListener(this);
	}

	public void 
	addView
	(IView view) 
	{
		registeredViews.add(view);
	}

	public void 
	removeView
	(IView view)
	{
		registeredViews.remove(view);
	}
}
