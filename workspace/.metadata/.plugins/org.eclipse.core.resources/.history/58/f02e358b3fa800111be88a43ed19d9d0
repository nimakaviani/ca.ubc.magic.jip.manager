package com.jchapman.jipsnapman.events;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.text.MessageFormat;

import jipplugin.Activator;

import models.Constants;

import org.yasl.arch.action.YASLActionHandler;
import org.yasl.arch.impl.event.YASLActionEvent;
import org.yasl.arch.resources.YASLResourceManager;

import com.jchapman.jipsnapman.utils.JIPSnapManConstants;

public class
EventLogger 
{
	///////////////////////////////////////////////////////////////////////////////
	//	Used by start/stop
	///////////////////////////////////////////////////////////////////////////////
	
	// log any exceptions thrown
	protected void 
	updateConsoleLog
	(Exception ex)
	throws IOException 
	{
		StringWriter swriter
		= new StringWriter();
		ex.printStackTrace(new PrintWriter(swriter));
		swriter.flush();
		swriter.close();
		updateConsoleLog(swriter.toString());
	}
		
	// log missing data dialog window errors
	protected YASLActionEvent 
	getErrorEvent() 
	{
		YASLActionEvent event = new YASLActionEvent(
		this,
		YASLActionEvent.ACTION_PERFORMED,
		"");
		event.addProperty(JIPSnapManConstants.KEY_ERR_DLGTITLE,
		"dlg.title.missing");
		return event;
	}
	
	// log a successful event
	protected void 
	updateForSuccessfulCall
	(String call) 
	throws IOException 
	{
		StringBuffer buf = new StringBuffer();
		buf.append(MessageFormat.format(
		resMan.getString(resMan.getDefaultBundle(), "app.mssg.call.success"),
		new Object[] {call}));
		buf.append('\n');
		updateConsoleLog(buf.toString(), actionHandler);
	}
	
	// write to the event log: main work horse
	protected void 
	updateConsoleLog
	(String message) 
	throws IOException
	{
		EventLogEvent event 
		= new EventLogEvent(
				this,
				EventLogEvent.ACTION_PERFORMED,
				""
			);
		event.setProperty(Constants.KEY_LOGS_DATA, message);
		EventLogActionHanlder action_handler
			= Activator.getDefault().getActionHandler();
		IEventLogAction action 
			= action_handler.getActionByKey(Constants.ACTKEY_LOG_DISPLAY);
		action.performAction(event);
	}

}
