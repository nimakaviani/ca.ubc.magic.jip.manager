/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.27
 * Generated at: 2012-05-26 22:55:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Collection;
import java.util.Iterator;
import java.util.HashMap;
import java.math.BigDecimal;
import org.apache.aries.samples.ariestrader.api.*;
import org.apache.aries.samples.ariestrader.api.persistence.*;
import org.apache.aries.samples.ariestrader.util.*;

public final class portfolio_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\n");
      out.write(" Licensed to the Apache Software Foundation (ASF) under one or more\n");
      out.write("  contributor license agreements.  See the NOTICE file distributed with\n");
      out.write("  this work for additional information regarding copyright ownership.\n");
      out.write("  The ASF licenses this file to You under the Apache License, Version 2.0\n");
      out.write("  (the \"License\"); you may not use this file except in compliance with\n");
      out.write("  the License.  You may obtain a copy of the License at\n");
      out.write("\n");
      out.write("      http://www.apache.org/licenses/LICENSE-2.0\n");
      out.write("\n");
      out.write("  Unless required by applicable law or agreed to in writing, software\n");
      out.write("  distributed under the License is distributed on an \"AS IS\" BASIS,\n");
      out.write("  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n");
      out.write("  See the License for the specific language governing permissions and\n");
      out.write("  limitations under the License.\n");
      out.write("-->\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n");
      out.write("<HTML>\n");
      out.write("<HEAD>\n");
      out.write("<META http-equiv=\"Content-Style-Type\" content=\"text/css\">\n");
      out.write("<TITLE>Trade Portfolio</TITLE>\n");
      out.write("<LINK rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" />\n");
      out.write("</HEAD>\n");
      out.write("<BODY bgcolor=\"#ffffff\" link=\"#000099\" vlink=\"#000099\">\n");
      out.write("\n");
      java.lang.String results = null;
      results = (java.lang.String) _jspx_page_context.getAttribute("results", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (results == null){
        throw new java.lang.InstantiationException("bean results not found within scope");
      }
      out.write('\n');
      java.util.Collection holdingDataBeans = null;
      holdingDataBeans = (java.util.Collection) _jspx_page_context.getAttribute("holdingDataBeans", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (holdingDataBeans == null){
        throw new java.lang.InstantiationException("bean holdingDataBeans not found within scope");
      }
      out.write('\n');
      java.util.Collection quoteDataBeans = null;
      quoteDataBeans = (java.util.Collection) _jspx_page_context.getAttribute("quoteDataBeans", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (quoteDataBeans == null){
        throw new java.lang.InstantiationException("bean quoteDataBeans not found within scope");
      }
      out.write("\n");
      out.write("<TABLE height=\"54\">\n");
      out.write("  <TBODY>\n");
      out.write("    <TR>\n");
      out.write("\t\t\t<TD bgcolor=\"#c93333\" align=\"left\" width=\"640\" height=\"10\" colspan=5><B><FONT\n");
      out.write("\t\t\t\tcolor=\"#ffffff\">AriesTrader Portfolio</FONT></B></TD>\n");
      out.write("\t\t\t<TD align=\"center\" bgcolor=\"#000000\" width=\"100\" height=\"10\"><FONT\n");
      out.write("\t\t\t\tcolor=\"#ffffff\"><B>AriesTrader</B></FONT></TD>\n");
      out.write("        </TR>\n");
      out.write("        <TR align=\"left\">\n");
      out.write("            <TD><B><A href=\"app?action=home\">Home</A></B><B> </B></TD>\n");
      out.write("            <TD><B><A href=\"app?action=account\">Account</A></B><B> </B></TD>\n");
      out.write("            <TD><B><A href=\"app?action=portfolio\">Portfolio</A></B><B> </B></TD>\n");
      out.write("            <TD><B><A href=\"app?action=quotes&symbols=s:0,s:1,s:2,s:3,s:4\">Quotes/Trade</A></B></TD>\n");
      out.write("            <TD><B><A href=\"app?action=logout\">Logoff</A></B></TD>\n");
      out.write("            <TD></TD>\n");
      out.write("        </TR>\n");
      out.write("        <TR>\n");
      out.write("            <TD align=\"right\" colspan=\"6\">\n");
      out.write("            <HR>\n");
      out.write("            <FONT color=\"#ff0000\" size=\"-2\">");
      out.print( new java.util.Date() );
      out.write("</FONT></TD>\n");
      out.write("        </TR>\n");

Collection closedOrders = (Collection)request.getAttribute("closedOrders");
if ( (closedOrders != null) && (closedOrders.size()>0) )
{

      out.write("         \n");
      out.write("        <TR>\n");
      out.write("            <TD colspan=\"6\" bgcolor=\"#ff0000\"><BLINK><B><FONT color=\"#ffffff\">Alert: The following Order(s) have completed.</FONT></B></BLINK></TD>\n");
      out.write("        </TR>\n");
      out.write("        <TR align=\"center\">\n");
      out.write("            <TD colspan=\"6\">\n");
      out.write("            <TABLE border=\"1\" style=\"font-size: smaller\">\n");
      out.write("                            <TBODY>\n");

	Iterator it = closedOrders.iterator();
	while (it.hasNext() )
	{
		OrderDataBean closedOrderData = (OrderDataBean)it.next();

      out.write("                            \n");
      out.write("                                <TR align=\"center\">\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">order ID</A></TD>\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">order status</A></TD>\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">creation date</A></TD>\n");
      out.write("\t\t\t\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">completion date</A></TD>\n");
      out.write("\t\t\t\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">txn fee</A></TD>\n");
      out.write("\t\t\t\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">type</A></TD>\n");
      out.write("\t\t\t\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">symbol</A></TD>\n");
      out.write("\t\t\t\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">quantity</A></TD>\n");
      out.write("                                </TR>\n");
      out.write("                                <TR align=\"center\">\n");
      out.write("                        <TD>");
      out.print( closedOrderData.getOrderID());
      out.write("</TD>\n");
      out.write("                        <TD>");
      out.print( closedOrderData.getOrderStatus());
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( closedOrderData.getOpenDate());
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( closedOrderData.getCompletionDate());
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( closedOrderData.getOrderFee());
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( closedOrderData.getOrderType());
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( FinancialUtils.printQuoteLink(closedOrderData.getSymbol()));
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( closedOrderData.getQuantity());
      out.write("</TD>\n");
      out.write("                                </TR>\n");
      out.write("        ");

	}

      out.write("\n");
      out.write("                                \n");
      out.write("                            </TBODY>\n");
      out.write("                        </TABLE>\n");
      out.write("            </TD>\n");
      out.write("        </TR>\n");
      out.write("        ");

}

      out.write("\n");
      out.write("    </TBODY>\n");
      out.write("</TABLE>\n");
      out.write("<TABLE width=\"645\">\n");
      out.write("    <TBODY>\n");
      out.write("        <TR>\n");
      out.write("            <TD valign=\"top\" width=\"643\">\n");
      out.write("            <TABLE width=\"100%\">\n");
      out.write("                <TBODY>\n");
      out.write("\n");
      out.write("                    <TR>\n");
      out.write("                        <TD colspan=\"5\" bgcolor=\"#cccccc\"><B>Portfolio </B></TD>\n");
      out.write("                        <TD bgcolor=\"#cccccc\" align=\"right\"><B>Number of Holdings: </B>");
      out.print( holdingDataBeans.size()
);
      out.write("</TD>\n");
      out.write("                    </TR>\n");
      out.write("                    <TR align=\"center\">\n");
      out.write("                        <TD colspan=\"6\">\n");
      out.write("                        <CENTER></CENTER>\n");
      out.write("                        <TABLE border=\"1\" style=\"font-size: smaller\">\n");
      out.write("                            <CAPTION align=\"bottom\"><B>Portfolio </B></CAPTION>\n");
      out.write("                            <TBODY>\n");
      out.write("                                <TR align=\"center\">\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">holding ID</A></TD>\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">purchase date</A></TD>\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">symbol</A></TD>\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">quantity</A></TD>\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">purchase price</A></TD>\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">current price</A></TD>\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">purchase basis</A></TD>                                    \n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">market value</A></TD>\n");
      out.write("                                    <TD><A href=\"docs/glossary.html\">gain/(loss)</A></TD>\n");
      out.write("                                    <TD><B><A href=\"docs/glossary.html\">trade</A></B></TD>\n");
      out.write("                                </TR>\n");
      out.write("                                ");
 // Create Hashmap for quick lookup of quote values
Iterator it = quoteDataBeans.iterator();
HashMap quoteMap = new HashMap();                                
while ( it.hasNext() ) 
{
	QuoteDataBean quoteData = (QuoteDataBean) it.next();
	quoteMap.put(quoteData.getSymbol(), quoteData);
}
//Step through and printout Holdings

it = holdingDataBeans.iterator();
BigDecimal totalGain = new BigDecimal(0.0);
BigDecimal totalBasis = new BigDecimal(0.0);
BigDecimal totalValue = new BigDecimal(0.0);
try {
	while (it.hasNext()) {
		HoldingDataBean holdingData = (HoldingDataBean) it.next();
		QuoteDataBean quoteData = (QuoteDataBean) quoteMap.get(holdingData.getQuoteID());
		BigDecimal basis = holdingData.getPurchasePrice().multiply(new BigDecimal(holdingData.getQuantity()));
		BigDecimal marketValue = quoteData.getPrice().multiply(new BigDecimal(holdingData.getQuantity()));
		totalBasis = totalBasis.add(basis);	
		totalValue = totalValue.add(marketValue);	
		BigDecimal gain = marketValue.subtract(basis);
		totalGain = totalGain.add(gain);
		BigDecimal gainPercent = null;
		if (basis.doubleValue() == 0.0)
		{
			gainPercent = new BigDecimal(0.0);
			Log.error("portfolio.jsp: Holding with zero basis. holdingID="+holdingData.getHoldingID() + " symbol=" + holdingData.getQuoteID() + " purchasePrice=" + holdingData.getPurchasePrice());
		}
		else
			gainPercent = marketValue.divide(basis, BigDecimal.ROUND_HALF_UP).subtract(new BigDecimal(1.0)).multiply(new BigDecimal(100.0));                        	
	
                         
      out.write("\n");
      out.write("                                <TR bgcolor=\"#fafcb6\" align=\"center\">\n");
      out.write("                                    <TD>");
      out.print( holdingData.getHoldingID() );
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( holdingData.getPurchaseDate() );
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( FinancialUtils.printQuoteLink(holdingData.getQuoteID()) );
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( holdingData.getQuantity() );
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( holdingData.getPurchasePrice() );
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( quoteData.getPrice() );
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( basis );
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( marketValue );
      out.write("</TD>\n");
      out.write("                                    <TD>");
      out.print( FinancialUtils.printGainHTML(gain) );
      out.write("</TD>\n");
      out.write("                                    <TD><B>");
      out.print( "<A href=\"app?action=sell&holdingID=" + holdingData.getHoldingID()+"\">sell</A>");
      out.write("</B></TD>\n");
      out.write("                                </TR>\n");
      out.write("                                ");
 
	}
}
catch (Exception e)
{
     Log.error("portfolio.jsp: error displaying user holdings", e);
}
				
      out.write("\n");
      out.write("                                <TR align=\"center\">\n");
      out.write("                                    <TD></TD>\n");
      out.write("                                    <TD></TD>\n");
      out.write("                                    <TD></TD>\n");
      out.write("                                    <TD></TD>\n");
      out.write("                                    <TD></TD>\n");
      out.write("                                    <TD><B>Total</B></TD>\n");
      out.write("                                    <TD align=\"center\">$ ");
      out.print( totalBasis );
      out.write("</TD>\n");
      out.write("                                    <TD align=\"center\">$ ");
      out.print( totalValue );
      out.write("</TD>\n");
      out.write("                                    <TD align=\"center\" colspan=\"2\">$ ");
      out.print( FinancialUtils.printGainHTML(totalGain) );
      out.write(' ');
      out.print( FinancialUtils.printGainPercentHTML(FinancialUtils.computeGainPercent(totalValue, totalBasis)) );
      out.write("</TD>\n");
      out.write("                                </TR>\n");
      out.write("                            </TBODY>\n");
      out.write("                        </TABLE>\n");
      out.write("                        <CENTER></CENTER>\n");
      out.write("                        </TD>\n");
      out.write("                    </TR>\n");
      out.write("                    <TR>\n");
      out.write("                        <TD colspan=\"6\"></TD>\n");
      out.write("                    </TR>\n");
      out.write("               </TBODY>\n");
      out.write("            </TABLE>\n");
      out.write("            </TD>\n");
      out.write("        </TR>\n");
      out.write("    </TBODY>\n");
      out.write("</TABLE>\n");
      out.write("<TABLE height=\"54\" style=\"font-size: smaller\">\n");
      out.write("  <TBODY>\n");
      out.write("        <TR>\n");
      out.write("            <TD colspan=\"2\">\n");
      out.write("            <HR>\n");
      out.write("            </TD>\n");
      out.write("        </TR>\n");
      out.write("        <TR>\n");
      out.write("            <TD colspan=\"2\">\n");
      out.write("            <TABLE width=\"100%\" style=\"font-size: smaller\">\n");
      out.write("                <TBODY>\n");
      out.write("                    <TR>\n");
      out.write("                        <TD>Note: Click any <A href=\"docs/glossary.html\">symbol</A> for a quote or to trade.</TD>\n");
      out.write("                        <TD align=\"right\"><FORM><INPUT type=\"submit\" name=\"action\" value=\"quotes\"> <INPUT size=\"20\" type=\"text\" name=\"symbols\" value=\"s:0, s:1, s:2, s:3, s:4\"></FORM></TD>\n");
      out.write("                    </TR>\n");
      out.write("                </TBODY>\n");
      out.write("            </TABLE>\n");
      out.write("            </TD>\n");
      out.write("        </TR>\n");
      out.write("        <TR>\n");
      out.write("\t\t\t<TD bgcolor=\"#c93333\" align=\"left\" width=\"640\" height=\"10\"><B><FONT\n");
      out.write("\t\t\t\tcolor=\"#ffffff\">AriesTrader Portfolio</FONT></B></TD>\n");
      out.write("\t\t\t<TD align=\"center\" bgcolor=\"#000000\" width=\"100\" height=\"10\"><FONT\n");
      out.write("\t\t\t\tcolor=\"#ffffff\"><B>AriesTrader</B></FONT></TD>\n");
      out.write("        </TR>\n");
      out.write("    </TBODY>\n");
      out.write("</TABLE>\n");
      out.write("</BODY>\n");
      out.write("</HTML>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
