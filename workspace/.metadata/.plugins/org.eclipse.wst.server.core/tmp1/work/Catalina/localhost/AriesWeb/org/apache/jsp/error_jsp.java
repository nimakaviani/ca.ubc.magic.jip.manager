/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.27
 * Generated at: 2012-05-25 23:35:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;

public final class error_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\n");
      out.write(" Licensed to the Apache Software Foundation (ASF) under one or more\n");
      out.write("  contributor license agreements.  See the NOTICE file distributed with\n");
      out.write("  this work for additional information regarding copyright ownership.\n");
      out.write("  The ASF licenses this file to You under the Apache License, Version 2.0\n");
      out.write("  (the \"License\"); you may not use this file except in compliance with\n");
      out.write("  the License.  You may obtain a copy of the License at\n");
      out.write("\n");
      out.write("      http://www.apache.org/licenses/LICENSE-2.0\n");
      out.write("\n");
      out.write("  Unless required by applicable law or agreed to in writing, software\n");
      out.write("  distributed under the License is distributed on an \"AS IS\" BASIS,\n");
      out.write("  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n");
      out.write("  See the License for the specific language governing permissions and\n");
      out.write("  limitations under the License.\n");
      out.write("-->\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<TABLE width=\"740\">\n");
      out.write("  <TBODY>\n");
      out.write("    <TR>\n");
      out.write("\t\t\t<TD bgcolor=\"#c93333\" align=\"left\" width=\"640\" height=\"10\"><B><FONT\n");
      out.write("\t\t\t\tcolor=\"#ffffff\">AriesTrader Error</FONT></B></TD>\n");
      out.write("\t\t\t<TD align=\"center\" bgcolor=\"#000000\" width=\"100\" height=\"10\"><FONT\n");
      out.write("\t\t\t\tcolor=\"#ffffff\"><B>AriesTrader</B></FONT></TD>\n");
      out.write("        </TR>\n");
      out.write("\n");
      out.write("</TABLE>\n");
      out.write("<DIV align=\"left\"></DIV>\n");
      out.write("<TABLE width=\"740\">\n");
      out.write("  <TBODY>\n");
      out.write("    <TR>\n");
      out.write("            <TD width=\"3\"></TD>\n");
      out.write("            <TD>\n");
      out.write("      <HR>\n");
      out.write("      </TD>\n");
      out.write("            <TD width=\"3\"></TD>\n");
      out.write("        </TR>\n");
      out.write("    <TR>\n");
      out.write("            <TD bgcolor=\"#e7e4e7\" rowspan=\"4\" width=\"3\"></TD>\n");
      out.write("            <TD><B><FONT color=\"#000000\">An Error has occured during AriesTrader processing</FONT><FONT size=\"-2\">.</FONT></B><BR>\n");
      out.write("            The stack trace detailing the error follows.\n");
      out.write("            <p><b>Please consult the application server error logs for further details.</b></p>\n");
      out.write("            </TD>\n");
      out.write("            <TD bgcolor=\"#e7e4e7\" width=\"3\" rowspan=\"4\"></TD>\n");
      out.write("        </TR>\n");
      out.write("    <TR>\n");
      out.write("            <TD><FONT size=\"-1\">\n");
      out.write("\n");

  String message = null;
  int status_code = -1;
  String exception_info = null;
  String url = null;

  try {
    Exception theException = null;
    Integer status = null;

    //these attribute names are specified by Servlet 2.2
    message = (String) request.getAttribute("javax.servlet.error.message");
    status = ((Integer) request.getAttribute("javax.servlet.error.status_code"));
    theException = (Exception) request.getAttribute("javax.servlet.error.exception");
    url = (String) request.getAttribute("javax.servlet.error.request_uri");

    // convert the stack trace to a string
    StringWriter sw = new StringWriter();
    PrintWriter pw = new PrintWriter(sw);
    theException.printStackTrace(pw);
    pw.flush();
    pw.close();

    if (message == null) {
      message = "not available";
    }

    if (status == null) {
      status_code = -1;             
    }
    else {
      status_code = status.intValue();
    }
    if (theException == null) {
      exception_info = "not available";
    }
    else {
      exception_info = theException.toString();
      exception_info = exception_info + "<br>" + sw.toString();
      sw.close();
    }
  } catch (Exception e) {
     e.printStackTrace();
  }

  out.println("<br><br><b>Processing request:</b>" +  url);      
  out.println("<br><b>StatusCode:</b> " +  status_code);
  out.println("<br><b>Message:</b>" + message);
  out.println("<br><b>Exception:</b>" + exception_info);


      out.write("\n");
      out.write("</FONT><FONT size=\"-1\">\n");
      out.write("     </FONT></TD>\n");
      out.write("        </TR>\n");
      out.write("    <TR>\n");
      out.write("            <TD align=\"left\"></TD>\n");
      out.write("        </TR>\n");
      out.write("    <TR>\n");
      out.write("            <TD>\n");
      out.write("      <HR>\n");
      out.write("      </TD>\n");
      out.write("        </TR>\n");
      out.write("  </TBODY>\n");
      out.write("</TABLE>\n");
      out.write("<TABLE>\n");
      out.write("  <TBODY>\n");
      out.write("    <TR>\n");
      out.write("\t\t\t<TD bgcolor=\"#c93333\" align=\"left\" width=\"640\" height=\"10\"><B><FONT\n");
      out.write("\t\t\t\tcolor=\"#ffffff\">AriesTrader Error</FONT></B></TD>\n");
      out.write("\t\t\t<TD align=\"center\" bgcolor=\"#000000\" width=\"100\" height=\"10\"><FONT\n");
      out.write("\t\t\t\tcolor=\"#ffffff\"><B>AriesTrader</B></FONT></TD>\n");
      out.write("        </TR>\n");
      out.write("    </TBODY>\n");
      out.write("</TABLE>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
