/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.27
 * Generated at: 2012-05-24 03:48:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Collection;
import java.util.Iterator;
import org.apache.aries.samples.ariestrader.api.*;
import org.apache.aries.samples.ariestrader.api.persistence.*;
import org.apache.aries.samples.ariestrader.util.*;

public final class marketSummary_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

 
    TradeServicesManager tradeServicesManager = null;

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\n");
      out.write(" Licensed to the Apache Software Foundation (ASF) under one or more\n");
      out.write("  contributor license agreements.  See the NOTICE file distributed with\n");
      out.write("  this work for additional information regarding copyright ownership.\n");
      out.write("  The ASF licenses this file to You under the Apache License, Version 2.0\n");
      out.write("  (the \"License\"); you may not use this file except in compliance with\n");
      out.write("  the License.  You may obtain a copy of the License at\n");
      out.write("\n");
      out.write("      http://www.apache.org/licenses/LICENSE-2.0\n");
      out.write("\n");
      out.write("  Unless required by applicable law or agreed to in writing, software\n");
      out.write("  distributed under the License is distributed on an \"AS IS\" BASIS,\n");
      out.write("  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n");
      out.write("  See the License for the specific language governing permissions and\n");
      out.write("  limitations under the License.\n");
      out.write("-->\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');

    if (tradeServicesManager == null) {
        tradeServicesManager = TradeServiceUtilities.getTradeServicesManager();
    }

    MarketSummaryDataBean marketSummaryData = tradeServicesManager.getMarketSummary();

      out.write("\n");
      out.write("<TABLE border=\"1\" bgcolor=\"#ffffff\" width=\"100%\"\n");
      out.write("\tstyle=\"font-size: smaller\">\n");
      out.write("\t<TBODY>\n");
      out.write("\t\t<TR>\n");
      out.write("\t\t\t<TD colspan=\"2\" bgcolor=\"#000000\" align=\"center\" height=\"15\"><FONT\n");
      out.write("\t\t\t\tcolor=\"#ffffff\"><B>Market Summary<BR>\n");
      out.write("\t\t\t");
      out.print( marketSummaryData.getSummaryDate() );
      out.write("</B></FONT></TD>\n");
      out.write("\t\t</TR>\n");
      out.write("\t\t<TR>\n");
      out.write("\t\t\t<TD align=\"right\" bgcolor=\"#fafcb6\" height=\"47\" width=\"100\"><A\n");
      out.write("\t\t\t\thref=\"docs/glossary.html\">AriesTrader Stock Index (TSIA)</A></TD>\n");
      out.write("\t\t\t<TD align=\"center\" valign=\"middle\" bgcolor=\"#ffffff\" height=\"47\"\n");
      out.write("\t\t\t\twidth=\"141\">");
      out.print( marketSummaryData.getTSIA() );
      out.write(' ');
      out.print( FinancialUtils.printGainPercentHTML(marketSummaryData.getGainPercent()) );
      out.write("</TD>\n");
      out.write("\t\t</TR>\n");
      out.write("\t\t<TR>\n");
      out.write("\t\t\t<TD align=\"right\" bgcolor=\"#fafcb6\"><A href=\"docs/glossary.html\">Trading\n");
      out.write("\t\t\tVolume</A></TD>\n");
      out.write("\t\t\t<TD align=\"center\" valign=\"middle\">");
      out.print( marketSummaryData.getVolume() );
      out.write("</TD>\n");
      out.write("\t\t</TR>\n");
      out.write("\t\t<TR>\n");
      out.write("\t\t\t<TD align=\"right\" bgcolor=\"#fafcb6\" width=\"74\"><A\n");
      out.write("\t\t\t\thref=\"docs/glossary.html\">Top Gainers</A></TD>\n");
      out.write("\t\t\t<TD bgcolor=\"#ffffff\">\n");
      out.write("\t\t\t<TABLE width=\"100%\" border=\"1\" height=\"100%\"\n");
      out.write("\t\t\t\tstyle=\"font-size: smaller\">\n");
      out.write("\t\t\t\t<TBODY>\n");
      out.write("\t\t\t\t\t<TR align=\"center\">\n");
      out.write("\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">symbol</A></TD>\n");
      out.write("\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">price</A></TD>\n");
      out.write("\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">change</A></TD>\n");
      out.write("\t\t\t\t\t</TR>\n");
      out.write("\t\t\t\t\t");
                              
Collection topGainers = marketSummaryData.getTopGainers();
Iterator gainers = topGainers.iterator();
int count=0;
while (gainers.hasNext() && (count++ < 5))
{
	QuoteDataBean quoteData = (QuoteDataBean) gainers.next();

      out.write("\n");
      out.write("\t\t\t\t\t<TR align=\"center\">\n");
      out.write("\t\t\t\t\t\t<TD width=\"24\">");
      out.print( FinancialUtils.printQuoteLink(quoteData.getSymbol()) );
      out.write("\n");
      out.write("\t\t\t\t\t\t</TD>\n");
      out.write("\t\t\t\t\t\t<TD>");
      out.print( quoteData.getPrice() );
      out.write("</TD>\n");
      out.write("\t\t\t\t\t\t<TD width=\"52\" nowrap>");
      out.print( FinancialUtils.printGainHTML(quoteData.getPrice().subtract(quoteData.getOpen())) /*FinancialUtils.printGainPercentHTML(FinancialUtils.computeGainPercent(quoteData.getPrice(), quoteData.getOpen()))*/ );
      out.write("</TD>\n");
      out.write("\t\t\t\t\t</TR>\n");
      out.write("\t\t\t\t\t");

}

      out.write("\n");
      out.write("\t\t\t\t</TBODY>\n");
      out.write("\t\t\t</TABLE>\n");
      out.write("\t\t\t</TD>\n");
      out.write("\t\t</TR>\n");
      out.write("\t\t<TR>\n");
      out.write("\t\t\t<TD align=\"right\" height=\"55\" bgcolor=\"#fafcb6\" width=\"74\"><A\n");
      out.write("\t\t\t\thref=\"docs/glossary.html\">Top Losers</A></TD>\n");
      out.write("\t\t\t<TD height=\"55\" bgcolor=\"#ffffff\" width=\"141\">\n");
      out.write("\t\t\t<TABLE width=\"100%\" border=\"1\" height=\"100%\"\n");
      out.write("\t\t\t\tstyle=\"font-size: smaller\">\n");
      out.write("\t\t\t\t<TBODY>\n");
      out.write("\t\t\t\t\t<TR align=\"center\">\n");
      out.write("\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">symbol</A></TD>\n");
      out.write("\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">price</A></TD>\n");
      out.write("\t\t\t\t\t\t<TD><A href=\"docs/glossary.html\">change</A></TD>\n");
      out.write("\t\t\t\t\t</TR>\n");
      out.write("\t\t\t\t\t");

Collection topLosers = marketSummaryData.getTopLosers();
Iterator losers  = topLosers.iterator();
count=0;
while (losers.hasNext() && (count++ < 5))

{
	QuoteDataBean quoteData = (QuoteDataBean) losers.next();

      out.write("\n");
      out.write("\t\t\t\t\t<TR align=\"center\">\n");
      out.write("\t\t\t\t\t\t<TD width=\"24\" nowrap>");
      out.print( FinancialUtils.printQuoteLink(quoteData.getSymbol()) );
      out.write("\n");
      out.write("\t\t\t\t\t\t</TD>\n");
      out.write("\t\t\t\t\t\t<TD>");
      out.print( quoteData.getPrice() );
      out.write("</TD>\n");
      out.write("\t\t\t\t\t\t<TD width=\"52\" nowrap>");
      out.print( FinancialUtils.printGainHTML(quoteData.getPrice().subtract(quoteData.getOpen())) /* FinancialUtils.printGainPercentHTML(FinancialUtils.computeGainPercent(quoteData.getPrice(), quoteData.getOpen())) */);
      out.write("</TD>\n");
      out.write("\t\t\t\t\t</TR>\n");
      out.write("\t\t\t\t\t");

}

      out.write("\n");
      out.write("\t\t\t\t</TBODY>\n");
      out.write("\t\t\t</TABLE>\n");
      out.write("\t\t\t</TD>\n");
      out.write("\t\t</TR>\n");
      out.write("\t</TBODY>\n");
      out.write("</TABLE>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
